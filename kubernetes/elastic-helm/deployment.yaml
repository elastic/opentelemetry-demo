default:
  image:
    repository: ghcr.io/elastic/opentelemetry-demo
    tag: 1.11.4
  envOverrides:
    - name: OTEL_SERVICE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.labels['app.kubernetes.io/component']
    - name: OTEL_K8S_NAMESPACE
      valueFrom:
        fieldRef:
         apiVersion: v1
         fieldPath: metadata.namespace
    - name: OTEL_K8S_NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: OTEL_K8S_POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: OTEL_K8S_POD_UID
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.uid
    - name: OTEL_RESOURCE_ATTRIBUTES
      value: 'service.name=$(OTEL_SERVICE_NAME),service.instance.id=$(OTEL_K8S_POD_UID),service.namespace=opentelemetry-demo,k8s.namespace.name=$(OTEL_K8S_NAMESPACE),k8s.node.name=$(OTEL_K8S_NODE_NAME),k8s.pod.name=$(OTEL_K8S_POD_NAME)'

components:
  flagd:
    mountedConfigMaps:
      - name: config
        mountPath: /etc/flagd/
        existingConfigMap: demo-flagd-enabled-config


opentelemetry-collector:
  image:
    repository: docker.elastic.co/beats/elastic-agent
    tag: 8.16.0-SNAPSHOT
    pullPolicy: Always
  mode: "deployment"
  presets:
    kubernetesAttributes:
      enabled: true
    kubernetesEvents:
      enabled: true
    clusterMetrics:
      enabled: true

  extraEnvs:
    - name: ELASTIC_AGENT_OTEL
      value: "true"
    - name: ELASTIC_PASSWORD
      valueFrom:
        secretKeyRef:
          name: elastic-secret-testathon
          key: elastic_password

  alternateConfig:
    extensions:
      health_check:
        endpoint: ${env:MY_POD_IP}:13133
    exporters:
      debug: {}
      otlp/apm:
        endpoint: "http://57.154.248.70:8200"
        tls:
          insecure: true
      otlp/esexporter:
        retry_on_failure:
          enabled: false
        endpoint: "http://48.217.113.189:4321"
        tls:
          insecure: true
      elasticsearch/otel:
        user: admin
        password: ${env:ELASTIC_PASSWORD}
        endpoints:
          - http://48.217.113.189:9201
        logs_dynamic_index:
          enabled: true
        metrics_dynamic_index:
          enabled: true
        mapping:
          mode: otel
    processors:
      batch: {}
      transform:
        error_mode: ignore
        trace_statements:
          - context: span
            conditions:
              - IsMatch(name, "^[A-Z]+\\s+.+")
            statements:
              - merge_maps(attributes, ExtractPatterns(name, "^(?P<method>\\S+)"), "upsert")
              - set(name, attributes["method"])
      resource:
        attributes:
          - key: deployment.environment
            value: "opentelemetry-demo"
            action: upsert
      resourcedetection/gcp:
        detectors: [env, gcp]
        timeout: 2s
        override: false
      resource/k8s:
        attributes:
          - key: service.name
            from_attribute: app.label.component
            action: insert
          - key: service.name
            from_attribute: k8s.container.name
            action: insert
          - key: app.label.name
            action: delete
          - key: service.version
            from_attribute: app.label.version
            action: insert
          - key: app.label.version
            action: delete
      k8sattributes:
        passthrough: false
        pod_association:
          - sources:
              - from: resource_attribute
                name: k8s.pod.ip
          - sources:
              - from: resource_attribute
                name: k8s.pod.uid
          - sources:
              - from: connection
        extract:
          metadata:
            - "k8s.namespace.name"
            - "k8s.deployment.name"
            - "k8s.replicaset.name"
            - "k8s.statefulset.name"
            - "k8s.daemonset.name"
            - "k8s.cronjob.name"
            - "k8s.job.name"
            - "k8s.node.name"
            - "k8s.pod.name"
            - "k8s.pod.ip"
            - "k8s.pod.uid"
            - "k8s.pod.start_time"
          labels:
            - tag_name: app.label.name
              key: app.kubernetes.io/name
              from: pod
            - tag_name: app.label.version
              key: app.kubernetes.io/version
              from: pod
    receivers:
      k8sobjects:
        objects:
        - exclude_watch_type:
          - DELETED
          group: events.k8s.io
          mode: watch
          name: events
      k8s_cluster:
          auth_type: serviceAccount
          node_conditions_to_report:
            - Ready
            - MemoryPressure
          allocatable_types_to_report:
            - cpu
            - memory
          metrics:
            k8s.pod.status_reason:
              enabled: true
          resource_attributes:
            k8s.kubelet.version:
              enabled: true
            os.description:
              enabled: true
            os.type:
              enabled: true
            k8s.container.status.last_terminated_reason:
              enabled: true
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otel-collector'
              scrape_interval: 5s
              static_configs:
                - targets: ['${env:MY_POD_IP}:8888']
      httpcheck/frontendproxy:
        targets:
        - endpoint: http://example-frontendproxy:8080
      otlp:
        protocols:
          grpc:
            endpoint: ${env:MY_POD_IP}:4317
          http:
            cors:
              allowed_origins:
              - http://*
              - https://*
            endpoint: ${env:MY_POD_IP}:4318
    service:
      extensions:
        - health_check
      pipelines:
        logs:
          exporters:
          - debug
          - otlp/apm
          - otlp/esexporter
          processors:
          - batch
          - resource
          receivers:
          - otlp
        metrics:
          exporters:
          - otlp/apm
          - otlp/esexporter
          - debug
          processors:
          - batch
          - resource
          receivers:
          - httpcheck/frontendproxy
          - otlp
          - prometheus
        traces:
          exporters:
          - otlp/apm
          - otlp/esexporter
          - debug
          processors:
          - transform
          - batch
          - resource
          receivers:
          - otlp
        metrics/otel:
            exporters:
            - debug
            - elasticsearch/otel
            processors:
            - k8sattributes
            - resourcedetection/gcp
            - resource/k8s
            receivers:
            - k8s_cluster
        logs/otel:
          receivers:
          - k8sobjects
          processors:
          - resourcedetection/gcp
          exporters:
          - debug
          - elasticsearch/otel
      telemetry:
        metrics:
          address: ${env:MY_POD_IP}:8888


opensearch:
  enabled: false

grafana:
  enabled: false

jaeger:
  enabled: false

prometheus:
  enabled: false
