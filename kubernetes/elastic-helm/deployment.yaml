default:
  image:
    repository: ghcr.io/elastic/opentelemetry-demo
    tag: 1.11.5
  envOverrides:
    - name: OTEL_SERVICE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.labels['app.kubernetes.io/component']
    - name: OTEL_K8S_NAMESPACE
      valueFrom:
        fieldRef:
         apiVersion: v1
         fieldPath: metadata.namespace
    - name: OTEL_K8S_NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: OTEL_K8S_POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: OTEL_K8S_POD_UID
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.uid
    - name: OTEL_RESOURCE_ATTRIBUTES
      value: 'service.name=$(OTEL_SERVICE_NAME),service.instance.id=$(OTEL_K8S_POD_UID),service.namespace=opentelemetry-demo,k8s.namespace.name=$(OTEL_K8S_NAMESPACE),k8s.node.name=$(OTEL_K8S_NODE_NAME),k8s.pod.name=$(OTEL_K8S_POD_NAME)'


opentelemetry-collector:
  image:
    repository: docker.elastic.co/beats/elastic-agent
    tag: 8.16.0-SNAPSHOT
  mode: "deployment"
  resources:
    limits:
      cpu: 100m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 500Mi
  presets:
    kubernetesAttributes:
      enabled: true
    kubernetesEvents:
      enabled: true
    clusterMetrics:
      enabled: true

  extraEnvs:
    - name: ELASTIC_AGENT_OTEL
      value: "true"
    - name: ELASTIC_ENDPOINT
      valueFrom:
        secretKeyRef:
          name: elastic-secret-ds
          key: elastic_endpoint
    - name: ELASTIC_API_KEY
      valueFrom:
        secretKeyRef:
          name: elastic-secret-ds
          key: elastic_api_key

  alternateConfig:
    extensions:
      health_check:
        endpoint: ${env:MY_POD_IP}:13133
    connectors:
      spanmetrics: {}
      # [Signal To Metrics Connector](https://github.com/elastic/opentelemetry-collector-components/tree/main/connector/signaltometricsconnector)
      signaltometrics: # Produces metrics from all signal types (traces, logs, or metrics).
        logs:
          - name: service_summary
            include_resource_attributes:
              - key: service.name
              - key: deployment.environment # service.environment
              - key: telemetry.sdk.language # service.language.name
              - key: agent.name # set via elastictraceprocessor
            attributes:
              - key: metricset.name
                default_value: service_summary
            sum:
              value: "1"
        datapoints:
          - name: service_summary
            include_resource_attributes:
              - key: service.name
              - key: deployment.environment # service.environment
              - key: telemetry.sdk.language # service.language.name
              - key: agent.name # set via elastictraceprocessor
            attributes:
              - key: metricset.name
                default_value: service_summary
            sum:
              value: "1"
        spans:
          - name: service_summary
            include_resource_attributes:
              - key: service.name
              - key: deployment.environment # service.environment
              - key: telemetry.sdk.language # service.language.name
              - key: agent.name # set via elastictraceprocessor
            attributes:
              - key: metricset.name
                default_value: service_summary
            sum:
              value: Int(AdjustedCount())
          - name: transaction.duration.histogram
            description: APM service transaction aggregated metrics as histogram
            include_resource_attributes:
              - key: service.name
              - key: deployment.environment # service.environment
              - key: telemetry.sdk.language # service.language.name
              - key: agent.name # set via elastictraceprocessor
            attributes:
              - key: transaction.root
              - key: transaction.type
              - key: metricset.name
                default_value: service_transaction
              - key: elasticsearch.mapping.hints
                default_value: [_doc_count]
            unit: us
            exponential_histogram:
              value: Microseconds(end_time - start_time)
          - name: transaction.duration.summary
            description: APM service transaction aggregated metrics as summary
            include_resource_attributes:
              - key: service.name
              - key: deployment.environment # service.environment
              - key: telemetry.sdk.language # service.language.name
              - key: agent.name # set via elastictraceprocessor
            attributes:
              - key: transaction.root
              - key: transaction.type
              - key: metricset.name
                default_value: service_transaction
              - key: elasticsearch.mapping.hints
                default_value: [aggregate_metric_double]
            unit: us
            histogram:
              buckets: [1]
              value: Microseconds(end_time - start_time)
          - name: transaction.duration.histogram
            description: APM transaction aggregated metrics as histogram
            ephemeral_resource_attribute: true
            include_resource_attributes:
              - key: service.name
              - key: deployment.environment # service.environment
              - key: telemetry.sdk.language # service.language.name
              - key: agent.name # set via elastictraceprocessor
              - key: container.id
              - key: k8s.pod.name
              - key: service.version
              - key: service.instance.id # service.node.name
              - key: process.runtime.name # service.runtime.name
              - key: process.runtime.version # service.runtime.version
              - key: telemetry.sdk.version # service.language.version??
              - key: host.name
              - key: os.type # host.os.platform
              - key: faas.instance
              - key: faas.name
              - key: faas.version
              - key: cloud.provider
              - key: cloud.region
              - key: cloud.availability_zone
              - key: cloud.platform # cloud.servicename
              - key: cloud.account.id
            attributes:
              - key: transaction.root
              - key: transaction.name
              - key: transaction.type
              - key: transaction.result
              - key: event.outcome
              - key: metricset.name
                default_value: transaction
              - key: elasticsearch.mapping.hints
                default_value: [_doc_count]
            unit: us
            exponential_histogram:
              value: Microseconds(end_time - start_time)
          - name: transaction.duration.summary
            description: APM transaction aggregated metrics as summary
            ephemeral_resource_attribute: true
            include_resource_attributes:
              - key: service.name
              - key: deployment.environment # service.environment
              - key: telemetry.sdk.language # service.language.name
              - key: agent.name # set via elastictraceprocessor
              - key: container.id
              - key: k8s.pod.name
              - key: service.version
              - key: service.instance.id # service.node.name
              - key: process.runtime.name # service.runtime.name
              - key: process.runtime.version # service.runtime.version
              - key: telemetry.sdk.version # service.language.version??
              - key: host.name
              - key: os.type # host.os.platform
              - key: faas.instance
              - key: faas.name
              - key: faas.version
              - key: cloud.provider
              - key: cloud.region
              - key: cloud.availability_zone
              - key: cloud.platform # cloud.servicename
              - key: cloud.account.id
            attributes:
              - key: transaction.root
              - key: transaction.name
              - key: transaction.type
              - key: transaction.result
              - key: event.outcome
              - key: metricset.name
                default_value: transaction
              - key: elasticsearch.mapping.hints
                default_value: [aggregate_metric_double]
            unit: us
            histogram:
              buckets: [1]
              value: Microseconds(end_time - start_time)
          - name: span.destination.service.response_time.sum.us
            description: APM span destination metrics
            ephemeral_resource_attribute: true
            include_resource_attributes:
              - key: service.name
              - key: deployment.environment # service.environment
              - key: telemetry.sdk.language # service.language.name
              - key: agent.name # set via elastictraceprocessor
            attributes:
              - key: span.name
              - key: event.outcome
              - key: service.target.type
              - key: service.target.name
              - key: span.destination.service.resource
              - key: metricset.name
                default_value: service_destination
            unit: us
            sum:
              value: Double(Microseconds(end_time - start_time))
          - name: span.destination.service.response_time.count
            description: APM span destination metrics
            ephemeral_resource_attribute: true
            include_resource_attributes:
              - key: service.name
              - key: deployment.environment # service.environment
              - key: telemetry.sdk.language # service.language.name
              - key: agent.name # set via elastictraceprocessor
            attributes:
              - key: span.name
              - key: event.outcome
              - key: service.target.type
              - key: service.target.name
              - key: span.destination.service.resource
              - key: metricset.name
                default_value: service_destination
            sum:
              value: Int(AdjustedCount())
          # event.success_count is populated using 2 metric definition with different conditions
          # and value for the histogram bucket based on event outcome. Both metric definition
          # are created using same name and attribute and will result in a single histogram.
          # We use mapping hint of aggregate_metric_double, so, only the sum and the count
          # values are required and the actual histogram bucket is ignored.
          - name: event.success_count
            description: Success count as a metric for service transaction
            include_resource_attributes:
              - key: service.name
              - key: deployment.environment # service.environment
              - key: telemetry.sdk.language # service.language.name
              - key: agent.name # set via elastictraceprocessor
            attributes:
              - key: transaction.root
              - key: transaction.type
              - key: metricset.name
                default_value: service_transaction
              - key: elasticsearch.mapping.hints
                default_value: [aggregate_metric_double]
            conditions:
              - attributes["event.outcome"] != nil and attributes["event.outcome"] == "success"
            unit: us
            histogram:
              buckets: [1]
              count: Int(AdjustedCount())
              value: Int(AdjustedCount())
          - name: event.success_count
            description: Success count as a metric for service transaction
            include_resource_attributes:
              - key: service.name
              - key: deployment.environment # service.environment
              - key: telemetry.sdk.language # service.language.name
              - key: agent.name # set via elastictraceprocessor
            attributes:
              - key: transaction.root
              - key: transaction.type
              - key: metricset.name
                default_value: service_transaction
              - key: elasticsearch.mapping.hints
                default_value: [aggregate_metric_double]
            conditions:
              - attributes["event.outcome"] != nil and attributes["event.outcome"] != "success"
            unit: us
            histogram:
              buckets: [0]
              count: Int(AdjustedCount())
              value: Double(0)
    exporters:
      debug: {}
      elasticsearch/otel:
        endpoints:
        - ${env:ELASTIC_ENDPOINT}
        api_key: ${env:ELASTIC_API_KEY}
        logs_dynamic_index:
          enabled: true
        metrics_dynamic_index:
          enabled: true
        traces_dynamic_index:
            enabled: true
        mapping:
          mode: otel
    processors:
      batch: {}
      resource:
        attributes:
          - key: deployment.environment
            value: "opentelemetry-demo"
            action: upsert
      # Transform processor to remove services high cardinality on span names
      transform/services:
        error_mode: ignore
        trace_statements:
          - context: span
            conditions:
              - IsMatch(name, "^[A-Z]+\\s+.+")
            statements:
              - merge_maps(attributes, ExtractPatterns(name, "^(?P<method>\\S+)"), "upsert")
              - set(name, attributes["method"])
      # [Elastic Trace Processor](https://github.com/elastic/opentelemetry-collector-components/tree/main/processor/elastictraceprocessor)
      elastictrace: {} # The processor enriches traces with elastic specific requirements.
      # [LSM Interval Processor](https://github.com/elastic/opentelemetry-collector-components/tree/main/processor/lsmintervalprocessor)
      lsminterval:
        intervals:
          - duration: 1m
            statements:
              - set(resource.attributes["metricset.interval"], "1m")
              - set(attributes["data_stream.dataset"], Concat([attributes["metricset.name"], "1m"], "."))
              - set(attributes["processor.event"], "metric")
          - duration: 10m
            statements:
              - set(resource.attributes["metricset.interval"], "10m")
              - set(attributes["data_stream.dataset"], Concat([attributes["metricset.name"], "10m"], "."))
              - set(attributes["processor.event"], "metric")
          - duration: 60m
            statements:
              - set(resource.attributes["metricset.interval"], "60m")
              - set(attributes["data_stream.dataset"], Concat([attributes["metricset.name"], "60m"], "."))
              - set(attributes["processor.event"], "metric")
    receivers:
      httpcheck/frontendproxy:
        targets:
        - endpoint: http://example-frontendproxy:8080
      otlp:
        protocols:
          grpc:
            endpoint: ${env:MY_POD_IP}:4317
          http:
            cors:
              allowed_origins:
              - http://*
              - https://*
            endpoint: ${env:MY_POD_IP}:4318
    service:
      extensions:
        - health_check
      pipelines:
        logs:
          exporters:
            - debug
            - elasticsearch/otel
            - signaltometrics
          processors:
            - batch
            - resource
          receivers:
            - otlp
        metrics:
          exporters:
            - elasticsearch/otel
            - signaltometrics
            - debug
          processors:
            - batch
            - resource
          receivers:
            - httpcheck/frontendproxy
            - otlp
            - spanmetrics
        traces:
          exporters:
            - elasticsearch/otel
            - debug
            - spanmetrics
            - signaltometrics
          processors:
            - transform/services
            - batch
            - elastictrace
            - resource
          receivers:
            - otlp
        metrics/aggregated-otel-metrics:
          receivers:
            - signaltometrics
          processors:
            - batch
            - lsminterval
          exporters:
            - debug
            - elasticsearch/otel
      telemetry:
        metrics:
          address: ${env:MY_POD_IP}:8888


opensearch:
  enabled: false

grafana:
  enabled: false

jaeger:
  enabled: false

prometheus:
  enabled: false
