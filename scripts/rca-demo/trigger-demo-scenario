#!/bin/bash

action=$1

# Use kubectl to get the command for he opentelemetry-demo-cartservice deployment containers
oldcommand=`kubectl get deployment my-otel-demo-cartservice -o jsonpath='{.spec.template.spec.containers}'`
echo "Current command: $oldcommand"
echo "Replacing cart service command"

# if $action is "restore" then restore the original command
if [ "$action" == "restore" ]; then
	echo "Restoring original command"
	kubectl patch deployment my-otel-demo-cartservice --type='json' -p='[{"op": "remove", "path": "/spec/template/spec/containers/0/command"}]'
	./scripts/rca-demo/create-release-annotation restore -s cartservice
	exit 0
else
    echo "Breaking container entrypoint"
	# Script sleeps for 20s to fool k8s into thinking it has actually started, preventing it from not switching over
	# from the other replica
	kubectl patch deployment my-otel-demo-cartservice --type='json' -p='[{"op": "replace", "path": "/spec/template/spec/containers/0/command", "value": ["/bin/sh", "-c", "echo FATAL: Could not start, bad entrypoint! >&2 && sleep 20 && echo exiting... && exit 1"]}]'
	echo "Creating annotation"
	./scripts/rca-demo/create-release-annotation -s cartservice
fi