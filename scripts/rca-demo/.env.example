################################ IMPORTANT #################################
# 
# This file contains all of the ENV variables required to run the RCA demo 
# setup and other scripts. 
#
# Please COPY this file WITHOUT the .example suffix, where it will then
# be ignored by git, and add your own values below. Please DO NOT change 
# the values in this .env.example file.
#
############################################################################



# NOTE: http://host.minikube.internal and http://host.docker.internal are BOTH
# valid domains for reaching your machine's localhost from inside the minikube container.
#
# So if you are running APM server locally on localhost:8200, and you want your minikube
# to be able to access that domain, you need to use http://host.minikube.internal:8200
# from within the minikube container and it should work.

# OTEL_EXPORTER_OTLP_ENDPOINT
#
# This is the endpoint for your OTLP collector, which could be an 
# APM server instance or another OTel collector endpoint
#
# e.g. "http://host.minikube.internal:8200"
export OTEL_EXPORTER_OTLP_ENDPOINT=""

# OTEL_EXPORTER_OTLP_HEADERS
#
# If your OTLP collector / APM server endpoint is guarded by auth, you will need
# to provide the correct header value, e.g. "Authorization=Bearer some_token_2241_here"
# or "Authorization=ApiKey some_api_key_here"
#
# However, if your OTLP endpoint requires no authorization, these headers are still
# expected by the script, even though they will be ignored by the OTLP collector.
# For that reason, just use "Authorization=Bearer none" to bypass this requirement.
export OTEL_EXPORTER_OTLP_HEADERS=""

# OTEL_DEMO_ES_ENDPOINT
#
# This is the endpoint for Elasticsearch, it should be the same ES that your
# OTLP collector is configured to connect to, and the same ES that your
# Kibana is configured to connect to, so that the demo works across all products.
#
# e.g. http://host.minikube.internal:9200
export OTEL_DEMO_ES_ENDPOINT=""

# OTEL_DEMO_ES_API_KEY
#
# Your Elasticsearch instance is likely set up with security enabled, which means
# you will need an ES API key to interact with it. For help on creating an
# API key, visit https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html
export OTEL_DEMO_ES_API_KEY=""

# KIBANA_URL
#
# URL where your connected Kibana is running. If you are running Kibana locally,
# this will probabably be http://host.minikube.internal:5601/basepath or similar.
#
# Fuller explanation TBA
export KIBANA_URL=""

# KIBANA_API_KEY
#
# Explanation TBA
export KIBANA_API_KEY="YOURAPIKEY"

# OTEL_DEMO_FLEET_URL
#
# Create a fleet policy (for a synthetics private location) and go through the "add agent" flow for it. 
# Within the policy go through the add agent flow and get these values from there. 
# 
# Note: for local dev, you will need to set up a Fleet SERVER before you can extract the agent setup values.
#
# Fuller explanation TBA
export OTEL_DEMO_FLEET_URL="https://FLEET_URL"

# OTEL_DEMO_FLEET_ENROLLMENT_TOKEN
#
# Explanation TBA
export OTEL_DEMO_FLEET_ENROLLMENT_TOKEN="YOURTOKEN"

# SYNTHETICS_API_KEY
#
# Get the synthetics API key from the "Project API Key" page in the Synthetics Kibana app
export SYNTHETICS_API_KEY="YOURSYNTHETICSAPIKEYI"

# SYNTHETICS_PRIVATE_LOCATION
#
# Make sure to create a synthetics private location in the synthetics UI linked to the previously 
# created fleet policy. It should generally be named otel-demo, but you can change it here.
export SYNTHETICS_PRIVATE_LOCATION="otel-demo"