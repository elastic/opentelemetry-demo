#!/bin/bash

SCRIPTS_DIR=$(dirname "${BASH_SOURCE[0]}")

set -a
source $SCRIPTS_DIR/shared.sh
set +a

autosource

create_data_view () {
	ID=$1
	INDICES=$2

	EXISTS=$(curl -s $KIBANA_URL/api/data_views/data_view/$ID -u "$KIBANA_USER:$KIBANA_PASSWORD" -H 'elastic-api-version: 2023-10-31')

	title "Attempting to create data view $ID"

	if [[ $EXISTS == '{"statusCode":404,"error":"Not Found"'* ]]; then
		title "Creating data view $1 for indices $2"
		curl -sS -D - -X POST $KIBANA_URL/api/data_views/data_view -u "$KIBANA_USER:$KIBANA_PASSWORD" -H 'kbn-xsrf: bananas' -H 'Content-Type: application/json' -H 'elastic-api-version: 2023-10-31' -d "{\"data_view\": { \"name\": \"$1 (Automated by Demo CLI)\", \"title\": \"$2\", \"id\": \"$1\", \"timeFieldName\": \"@timestamp\" }}" -o /dev/null | head -n1
	else
		title "Data view $1 already exists"
	fi
}

create_rule () {
	ID=$1
	DATA_FILE=$2
	
	title "Attempting to create rule from $DATA_FILE"

	curl -sS -D - -X POST $KIBANA_URL/api/alerting/rule/$ID -u "$KIBANA_USER:$KIBANA_PASSWORD" -H 'kbn-xsrf: bananas' -H 'Content-Type: application/json; elastic-api-version: 2023-10-31' -d @$SCRIPTS_DIR/data/$DATA_FILE -o /dev/null | head -n1
}

title "Setting up Kibana assets for the demo..."

if [ -z "${KIBANA_URL}" ]; then
  die "You must set KIBANA_URL so that we can post API requests there (please include base path if one exists)"
fi

if [ -z "${OTEL_DEMO_ES_ENDPOINT}" ]; then
  die "You must set OTEL_DEMO_ES_ENDPOINT"
fi

if [ -z "${OTEL_DEMO_ES_API_KEY}" ]; then
  die "You must set OTEL_DEMO_ES_API_KEY (must be valid API key for ES APIs)"
fi

if [ -z "${KIBANA_USER}" ]; then
  die "You must set KIBANA_USER to an admin user"
fi

if [ -z "${KIBANA_PASSWORD}" ]; then
  die "You must set KIBANA_PASSWORD for the specified user"
fi

# Replace kubernetes internal host pattern with localhost
OTEL_DEMO_ES_ENDPOINT=$(echo $OTEL_DEMO_ES_ENDPOINT | sed "s/host.minikube.internal/localhost/" | sed "s/host.docker.internal/localhost/")

# Create data views
create_data_view otel_logs_data logs-*otel* 

echo -e "\n"

# Create rules
create_rule 9055220c-8fb1-4f9f-be7c-0a33eb2bafc5 rule-01.json

echo -e "\n"

# Update mappings in ES
# NOTE: this will fail if the data stream is not created
# TODO: Update the component template also, and just swallow errors on this call
title "Skipping message alias for otel logs, not needed anymore"
# curl -X PUT "$OTEL_DEMO_ES_ENDPOINT/logs-*otel*/_mapping" -H "Authorization: ApiKey $OTEL_DEMO_ES_API_KEY" -H "Content-Type: application/json" -d @$SCRIPTS_DIR/data/mapping-message-alias.json

echo -e "\n"

# Enable EEM
title "Attempting to enable EEM"
curl -X PUT -u "$KIBANA_USER:$KIBANA_PASSWORD" -H "kbn-xsrf: bananas" -H "x-elastic-internal-origin: Kibana" $KIBANA_URL/internal/entities/managed/enablement