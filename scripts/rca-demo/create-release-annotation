#!/bin/bash

SCRIPTS_DIR=$(dirname "${BASH_SOURCE[0]}")

set -a
source $SCRIPTS_DIR/shared.sh
set +a

autosource

if [ -z "${KIBANA_URL}" ]; then
  die "You must set KIBANA_URL to a valid Kibana URL"
fi

if [ -z "${KIBANA_USER}" ]; then
  die "You must set KIBANA_USER to a valid admin Kibana user"
fi

if [ -z "${KIBANA_PASSWORD}" ]; then
  die "You must set KIBANA_PASSWORD for the specified user"
fi

if [[ "$1" != -* ]]; then
    action="$1"
    shift
fi

while [[ "$#" -gt 0 ]]; do
    case $1 in
        -s) service_name="$2"; shift ;;
    esac
    shift
done

if [[ -z "$service_name" ]]; then
  die "You must specify service name using -s option"
fi

release_timestamp=$(date -u -v-5M +"%Y-%m-%dT%H:%M:%SZ")
new_service_version="2.0.0"

old_service_version="1.0.0"
rollback_timestamp=$(date -u -v-1M +"%Y-%m-%dT%H:%M:%SZ")

ANNOTATION_API_ENDPOINT="$KIBANA_URL/api/apm/services/$service_name/annotation"

service_version=$( [[ "$action" == "restore" ]] && echo "$old_service_version" || echo "$new_service_version" )
message=$( [[ "$action" == "restore" ]] && echo "Version rollback" || echo "New version release" )
timestamp=$( [[ "$action" == "restore" ]] && echo "$rollback_timestamp" || echo "$release_timestamp" )

REQUEST_BODY=$(cat <<EOF
{
    "@timestamp": "$timestamp",
    "service": {
        "version": "$service_version"
    },
    "message": "$message for $service_name: $service_version"
}
EOF
)

HEADERS=(
    -H "kbn-xsrf: true" \
    -H "elastic-api-version: 2023-10-31" \
    -H "Content-Type: application/json"
)

response=$(curl -s -X POST -u "$KIBANA_USER:$KIBANA_PASSWORD" "${HEADERS[@]}" -d "$REQUEST_BODY" "$ANNOTATION_API_ENDPOINT")

echo "$response"
